// <auto-generated />
using System;
using Idea.Cookbook;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Idea.Cookbook.Migrations
{
    [DbContext(typeof(CookbookModelContext))]
    [Migration("20180711132211_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Idea.Cookbook.Entities.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float?>("Amount");

                    b.Property<string>("Name");

                    b.Property<Guid?>("RecipeId");

                    b.Property<Guid>("UnitId");

                    b.Property<Guid?>("UnitId1");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UnitId");

                    b.HasIndex("UnitId1");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("Idea.Cookbook.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Directions");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("Idea.Cookbook.Entities.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Symbol");

                    b.HasKey("Id");

                    b.ToTable("Unit");

                    b.HasData(
                        new { Id = new Guid("3078babe-42f2-41cf-a0a9-e3b0c7c7bf45"), Name = "Kilogram", Symbol = "Kg" },
                        new { Id = new Guid("f8c2854d-15eb-4372-930c-70244566bfb7"), Name = "Gram", Symbol = "g" },
                        new { Id = new Guid("576f18fe-fcdb-4937-969d-4480d3c5128f"), Name = "Liter", Symbol = "l" },
                        new { Id = new Guid("4463240b-eacc-45ca-89d0-aa8d326b87ae"), Name = "Mililiter", Symbol = "ml" },
                        new { Id = new Guid("1901a437-8249-44be-8373-0e72da21ff9e"), Name = "Tea spoon", Symbol = "tsp" },
                        new { Id = new Guid("b0bf7ddb-45be-4f31-836a-53476eb9cb65"), Name = "Spoon", Symbol = "sp" },
                        new { Id = new Guid("3fb0208b-cb90-431a-a4cd-6d38636c7706"), Name = "Piece", Symbol = "piece" }
                    );
                });

            modelBuilder.Entity("Idea.Cookbook.Entities.Ingredient", b =>
                {
                    b.HasOne("Idea.Cookbook.Entities.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId");

                    b.HasOne("Idea.Cookbook.Entities.Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Idea.Cookbook.Entities.Unit", "Unit")
                        .WithMany("Ingredients")
                        .HasForeignKey("UnitId1");
                });
#pragma warning restore 612, 618
        }
    }
}
